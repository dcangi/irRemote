

Microchip Technology PIC LITE Macro Assembler V1.31 build 56723 
                                                                                               Fri Apr 10 18:14:59 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x620,48
    22                           	dabs	1,0x5A0,80
    23                           	dabs	1,0x521,79
    24                           	dabs	1,0x2321,0,_irparams
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  0007                     	;# 
    34  0008                     	;# 
    35  0009                     	;# 
    36  000A                     	;# 
    37  000B                     	;# 
    38  000C                     	;# 
    39  000E                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001E                     	;# 
    53  001F                     	;# 
    54  008C                     	;# 
    55  008E                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0093                     	;# 
    59  0095                     	;# 
    60  0096                     	;# 
    61  0097                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009A                     	;# 
    65  009B                     	;# 
    66  009B                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  010C                     	;# 
    71  010E                     	;# 
    72  0111                     	;# 
    73  0112                     	;# 
    74  0113                     	;# 
    75  0114                     	;# 
    76  0115                     	;# 
    77  0116                     	;# 
    78  0117                     	;# 
    79  0118                     	;# 
    80  0119                     	;# 
    81  011A                     	;# 
    82  011B                     	;# 
    83  011D                     	;# 
    84  011E                     	;# 
    85  018C                     	;# 
    86  018E                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0194                     	;# 
    94  0195                     	;# 
    95  0196                     	;# 
    96  0199                     	;# 
    97  019A                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019C                     	;# 
   101  019D                     	;# 
   102  019E                     	;# 
   103  019F                     	;# 
   104  020C                     	;# 
   105  020E                     	;# 
   106  0211                     	;# 
   107  0211                     	;# 
   108  0212                     	;# 
   109  0212                     	;# 
   110  0213                     	;# 
   111  0213                     	;# 
   112  0214                     	;# 
   113  0214                     	;# 
   114  0215                     	;# 
   115  0215                     	;# 
   116  0215                     	;# 
   117  0216                     	;# 
   118  0216                     	;# 
   119  0217                     	;# 
   120  0217                     	;# 
   121  0291                     	;# 
   122  0291                     	;# 
   123  0292                     	;# 
   124  0293                     	;# 
   125  0294                     	;# 
   126  0295                     	;# 
   127  0295                     	;# 
   128  0296                     	;# 
   129  0298                     	;# 
   130  0298                     	;# 
   131  0299                     	;# 
   132  029A                     	;# 
   133  029B                     	;# 
   134  029C                     	;# 
   135  029D                     	;# 
   136  029E                     	;# 
   137  0311                     	;# 
   138  0311                     	;# 
   139  0312                     	;# 
   140  0313                     	;# 
   141  0318                     	;# 
   142  0318                     	;# 
   143  0319                     	;# 
   144  031A                     	;# 
   145  038C                     	;# 
   146  038E                     	;# 
   147  0391                     	;# 
   148  0392                     	;# 
   149  0393                     	;# 
   150  039A                     	;# 
   151  039C                     	;# 
   152  039D                     	;# 
   153  039E                     	;# 
   154  039F                     	;# 
   155  0415                     	;# 
   156  0416                     	;# 
   157  0417                     	;# 
   158  041C                     	;# 
   159  041D                     	;# 
   160  041E                     	;# 
   161  0FE4                     	;# 
   162  0FE5                     	;# 
   163  0FE6                     	;# 
   164  0FE7                     	;# 
   165  0FE8                     	;# 
   166  0FE9                     	;# 
   167  0FEA                     	;# 
   168  0FEB                     	;# 
   169  0FED                     	;# 
   170  0FEE                     	;# 
   171  0FEF                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000E                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  008C                     	;# 
   201  008E                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  010C                     	;# 
   217  010E                     	;# 
   218  0111                     	;# 
   219  0112                     	;# 
   220  0113                     	;# 
   221  0114                     	;# 
   222  0115                     	;# 
   223  0116                     	;# 
   224  0117                     	;# 
   225  0118                     	;# 
   226  0119                     	;# 
   227  011A                     	;# 
   228  011B                     	;# 
   229  011D                     	;# 
   230  011E                     	;# 
   231  018C                     	;# 
   232  018E                     	;# 
   233  0191                     	;# 
   234  0191                     	;# 
   235  0192                     	;# 
   236  0193                     	;# 
   237  0193                     	;# 
   238  0193                     	;# 
   239  0194                     	;# 
   240  0195                     	;# 
   241  0196                     	;# 
   242  0199                     	;# 
   243  019A                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019C                     	;# 
   247  019D                     	;# 
   248  019E                     	;# 
   249  019F                     	;# 
   250  020C                     	;# 
   251  020E                     	;# 
   252  0211                     	;# 
   253  0211                     	;# 
   254  0212                     	;# 
   255  0212                     	;# 
   256  0213                     	;# 
   257  0213                     	;# 
   258  0214                     	;# 
   259  0214                     	;# 
   260  0215                     	;# 
   261  0215                     	;# 
   262  0215                     	;# 
   263  0216                     	;# 
   264  0216                     	;# 
   265  0217                     	;# 
   266  0217                     	;# 
   267  0291                     	;# 
   268  0291                     	;# 
   269  0292                     	;# 
   270  0293                     	;# 
   271  0294                     	;# 
   272  0295                     	;# 
   273  0295                     	;# 
   274  0296                     	;# 
   275  0298                     	;# 
   276  0298                     	;# 
   277  0299                     	;# 
   278  029A                     	;# 
   279  029B                     	;# 
   280  029C                     	;# 
   281  029D                     	;# 
   282  029E                     	;# 
   283  0311                     	;# 
   284  0311                     	;# 
   285  0312                     	;# 
   286  0313                     	;# 
   287  0318                     	;# 
   288  0318                     	;# 
   289  0319                     	;# 
   290  031A                     	;# 
   291  038C                     	;# 
   292  038E                     	;# 
   293  0391                     	;# 
   294  0392                     	;# 
   295  0393                     	;# 
   296  039A                     	;# 
   297  039C                     	;# 
   298  039D                     	;# 
   299  039E                     	;# 
   300  039F                     	;# 
   301  0415                     	;# 
   302  0416                     	;# 
   303  0417                     	;# 
   304  041C                     	;# 
   305  041D                     	;# 
   306  041E                     	;# 
   307  0FE4                     	;# 
   308  0FE5                     	;# 
   309  0FE6                     	;# 
   310  0FE7                     	;# 
   311  0FE8                     	;# 
   312  0FE9                     	;# 
   313  0FEA                     	;# 
   314  0FEB                     	;# 
   315  0FED                     	;# 
   316  0FEE                     	;# 
   317  0FEF                     	;# 
   318  0000                     	;# 
   319  0001                     	;# 
   320  0002                     	;# 
   321  0003                     	;# 
   322  0004                     	;# 
   323  0005                     	;# 
   324  0006                     	;# 
   325  0007                     	;# 
   326  0008                     	;# 
   327  0009                     	;# 
   328  000A                     	;# 
   329  000B                     	;# 
   330  000C                     	;# 
   331  000E                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  008C                     	;# 
   347  008E                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  010C                     	;# 
   363  010E                     	;# 
   364  0111                     	;# 
   365  0112                     	;# 
   366  0113                     	;# 
   367  0114                     	;# 
   368  0115                     	;# 
   369  0116                     	;# 
   370  0117                     	;# 
   371  0118                     	;# 
   372  0119                     	;# 
   373  011A                     	;# 
   374  011B                     	;# 
   375  011D                     	;# 
   376  011E                     	;# 
   377  018C                     	;# 
   378  018E                     	;# 
   379  0191                     	;# 
   380  0191                     	;# 
   381  0192                     	;# 
   382  0193                     	;# 
   383  0193                     	;# 
   384  0193                     	;# 
   385  0194                     	;# 
   386  0195                     	;# 
   387  0196                     	;# 
   388  0199                     	;# 
   389  019A                     	;# 
   390  019B                     	;# 
   391  019B                     	;# 
   392  019C                     	;# 
   393  019D                     	;# 
   394  019E                     	;# 
   395  019F                     	;# 
   396  020C                     	;# 
   397  020E                     	;# 
   398  0211                     	;# 
   399  0211                     	;# 
   400  0212                     	;# 
   401  0212                     	;# 
   402  0213                     	;# 
   403  0213                     	;# 
   404  0214                     	;# 
   405  0214                     	;# 
   406  0215                     	;# 
   407  0215                     	;# 
   408  0215                     	;# 
   409  0216                     	;# 
   410  0216                     	;# 
   411  0217                     	;# 
   412  0217                     	;# 
   413  0291                     	;# 
   414  0291                     	;# 
   415  0292                     	;# 
   416  0293                     	;# 
   417  0294                     	;# 
   418  0295                     	;# 
   419  0295                     	;# 
   420  0296                     	;# 
   421  0298                     	;# 
   422  0298                     	;# 
   423  0299                     	;# 
   424  029A                     	;# 
   425  029B                     	;# 
   426  029C                     	;# 
   427  029D                     	;# 
   428  029E                     	;# 
   429  0311                     	;# 
   430  0311                     	;# 
   431  0312                     	;# 
   432  0313                     	;# 
   433  0318                     	;# 
   434  0318                     	;# 
   435  0319                     	;# 
   436  031A                     	;# 
   437  038C                     	;# 
   438  038E                     	;# 
   439  0391                     	;# 
   440  0392                     	;# 
   441  0393                     	;# 
   442  039A                     	;# 
   443  039C                     	;# 
   444  039D                     	;# 
   445  039E                     	;# 
   446  039F                     	;# 
   447  0415                     	;# 
   448  0416                     	;# 
   449  0417                     	;# 
   450  041C                     	;# 
   451  041D                     	;# 
   452  041E                     	;# 
   453  0FE4                     	;# 
   454  0FE5                     	;# 
   455  0FE6                     	;# 
   456  0FE7                     	;# 
   457  0FE8                     	;# 
   458  0FE9                     	;# 
   459  0FEA                     	;# 
   460  0FEB                     	;# 
   461  0FED                     	;# 
   462  0FEE                     	;# 
   463  0FEF                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000E                     	;# 
   478  0011                     	;# 
   479  0012                     	;# 
   480  0013                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  008C                     	;# 
   493  008E                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0093                     	;# 
   497  0095                     	;# 
   498  0096                     	;# 
   499  0097                     	;# 
   500  0098                     	;# 
   501  0099                     	;# 
   502  009A                     	;# 
   503  009B                     	;# 
   504  009B                     	;# 
   505  009C                     	;# 
   506  009D                     	;# 
   507  009E                     	;# 
   508  010C                     	;# 
   509  010E                     	;# 
   510  0111                     	;# 
   511  0112                     	;# 
   512  0113                     	;# 
   513  0114                     	;# 
   514  0115                     	;# 
   515  0116                     	;# 
   516  0117                     	;# 
   517  0118                     	;# 
   518  0119                     	;# 
   519  011A                     	;# 
   520  011B                     	;# 
   521  011D                     	;# 
   522  011E                     	;# 
   523  018C                     	;# 
   524  018E                     	;# 
   525  0191                     	;# 
   526  0191                     	;# 
   527  0192                     	;# 
   528  0193                     	;# 
   529  0193                     	;# 
   530  0193                     	;# 
   531  0194                     	;# 
   532  0195                     	;# 
   533  0196                     	;# 
   534  0199                     	;# 
   535  019A                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019C                     	;# 
   539  019D                     	;# 
   540  019E                     	;# 
   541  019F                     	;# 
   542  020C                     	;# 
   543  020E                     	;# 
   544  0211                     	;# 
   545  0211                     	;# 
   546  0212                     	;# 
   547  0212                     	;# 
   548  0213                     	;# 
   549  0213                     	;# 
   550  0214                     	;# 
   551  0214                     	;# 
   552  0215                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0216                     	;# 
   556  0216                     	;# 
   557  0217                     	;# 
   558  0217                     	;# 
   559  0291                     	;# 
   560  0291                     	;# 
   561  0292                     	;# 
   562  0293                     	;# 
   563  0294                     	;# 
   564  0295                     	;# 
   565  0295                     	;# 
   566  0296                     	;# 
   567  0298                     	;# 
   568  0298                     	;# 
   569  0299                     	;# 
   570  029A                     	;# 
   571  029B                     	;# 
   572  029C                     	;# 
   573  029D                     	;# 
   574  029E                     	;# 
   575  0311                     	;# 
   576  0311                     	;# 
   577  0312                     	;# 
   578  0313                     	;# 
   579  0318                     	;# 
   580  0318                     	;# 
   581  0319                     	;# 
   582  031A                     	;# 
   583  038C                     	;# 
   584  038E                     	;# 
   585  0391                     	;# 
   586  0392                     	;# 
   587  0393                     	;# 
   588  039A                     	;# 
   589  039C                     	;# 
   590  039D                     	;# 
   591  039E                     	;# 
   592  039F                     	;# 
   593  0415                     	;# 
   594  0416                     	;# 
   595  0417                     	;# 
   596  041C                     	;# 
   597  041D                     	;# 
   598  041E                     	;# 
   599  0FE4                     	;# 
   600  0FE5                     	;# 
   601  0FE6                     	;# 
   602  0FE7                     	;# 
   603  0FE8                     	;# 
   604  0FE9                     	;# 
   605  0FEA                     	;# 
   606  0FEB                     	;# 
   607  0FED                     	;# 
   608  0FEE                     	;# 
   609  0FEF                     	;# 
   610  0000                     	;# 
   611  0001                     	;# 
   612  0002                     	;# 
   613  0003                     	;# 
   614  0004                     	;# 
   615  0005                     	;# 
   616  0006                     	;# 
   617  0007                     	;# 
   618  0008                     	;# 
   619  0009                     	;# 
   620  000A                     	;# 
   621  000B                     	;# 
   622  000C                     	;# 
   623  000E                     	;# 
   624  0011                     	;# 
   625  0012                     	;# 
   626  0013                     	;# 
   627  0015                     	;# 
   628  0016                     	;# 
   629  0016                     	;# 
   630  0017                     	;# 
   631  0018                     	;# 
   632  0019                     	;# 
   633  001A                     	;# 
   634  001B                     	;# 
   635  001C                     	;# 
   636  001E                     	;# 
   637  001F                     	;# 
   638  008C                     	;# 
   639  008E                     	;# 
   640  0091                     	;# 
   641  0092                     	;# 
   642  0093                     	;# 
   643  0095                     	;# 
   644  0096                     	;# 
   645  0097                     	;# 
   646  0098                     	;# 
   647  0099                     	;# 
   648  009A                     	;# 
   649  009B                     	;# 
   650  009B                     	;# 
   651  009C                     	;# 
   652  009D                     	;# 
   653  009E                     	;# 
   654  010C                     	;# 
   655  010E                     	;# 
   656  0111                     	;# 
   657  0112                     	;# 
   658  0113                     	;# 
   659  0114                     	;# 
   660  0115                     	;# 
   661  0116                     	;# 
   662  0117                     	;# 
   663  0118                     	;# 
   664  0119                     	;# 
   665  011A                     	;# 
   666  011B                     	;# 
   667  011D                     	;# 
   668  011E                     	;# 
   669  018C                     	;# 
   670  018E                     	;# 
   671  0191                     	;# 
   672  0191                     	;# 
   673  0192                     	;# 
   674  0193                     	;# 
   675  0193                     	;# 
   676  0193                     	;# 
   677  0194                     	;# 
   678  0195                     	;# 
   679  0196                     	;# 
   680  0199                     	;# 
   681  019A                     	;# 
   682  019B                     	;# 
   683  019B                     	;# 
   684  019C                     	;# 
   685  019D                     	;# 
   686  019E                     	;# 
   687  019F                     	;# 
   688  020C                     	;# 
   689  020E                     	;# 
   690  0211                     	;# 
   691  0211                     	;# 
   692  0212                     	;# 
   693  0212                     	;# 
   694  0213                     	;# 
   695  0213                     	;# 
   696  0214                     	;# 
   697  0214                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0216                     	;# 
   702  0216                     	;# 
   703  0217                     	;# 
   704  0217                     	;# 
   705  0291                     	;# 
   706  0291                     	;# 
   707  0292                     	;# 
   708  0293                     	;# 
   709  0294                     	;# 
   710  0295                     	;# 
   711  0295                     	;# 
   712  0296                     	;# 
   713  0298                     	;# 
   714  0298                     	;# 
   715  0299                     	;# 
   716  029A                     	;# 
   717  029B                     	;# 
   718  029C                     	;# 
   719  029D                     	;# 
   720  029E                     	;# 
   721  0311                     	;# 
   722  0311                     	;# 
   723  0312                     	;# 
   724  0313                     	;# 
   725  0318                     	;# 
   726  0318                     	;# 
   727  0319                     	;# 
   728  031A                     	;# 
   729  038C                     	;# 
   730  038E                     	;# 
   731  0391                     	;# 
   732  0392                     	;# 
   733  0393                     	;# 
   734  039A                     	;# 
   735  039C                     	;# 
   736  039D                     	;# 
   737  039E                     	;# 
   738  039F                     	;# 
   739  0415                     	;# 
   740  0416                     	;# 
   741  0417                     	;# 
   742  041C                     	;# 
   743  041D                     	;# 
   744  041E                     	;# 
   745  0FE4                     	;# 
   746  0FE5                     	;# 
   747  0FE6                     	;# 
   748  0FE7                     	;# 
   749  0FE8                     	;# 
   750  0FE9                     	;# 
   751  0FEA                     	;# 
   752  0FEB                     	;# 
   753  0FED                     	;# 
   754  0FEE                     	;# 
   755  0FEF                     	;# 
   756  0000                     	;# 
   757  0001                     	;# 
   758  0002                     	;# 
   759  0003                     	;# 
   760  0004                     	;# 
   761  0005                     	;# 
   762  0006                     	;# 
   763  0007                     	;# 
   764  0008                     	;# 
   765  0009                     	;# 
   766  000A                     	;# 
   767  000B                     	;# 
   768  000C                     	;# 
   769  000E                     	;# 
   770  0011                     	;# 
   771  0012                     	;# 
   772  0013                     	;# 
   773  0015                     	;# 
   774  0016                     	;# 
   775  0016                     	;# 
   776  0017                     	;# 
   777  0018                     	;# 
   778  0019                     	;# 
   779  001A                     	;# 
   780  001B                     	;# 
   781  001C                     	;# 
   782  001E                     	;# 
   783  001F                     	;# 
   784  008C                     	;# 
   785  008E                     	;# 
   786  0091                     	;# 
   787  0092                     	;# 
   788  0093                     	;# 
   789  0095                     	;# 
   790  0096                     	;# 
   791  0097                     	;# 
   792  0098                     	;# 
   793  0099                     	;# 
   794  009A                     	;# 
   795  009B                     	;# 
   796  009B                     	;# 
   797  009C                     	;# 
   798  009D                     	;# 
   799  009E                     	;# 
   800  010C                     	;# 
   801  010E                     	;# 
   802  0111                     	;# 
   803  0112                     	;# 
   804  0113                     	;# 
   805  0114                     	;# 
   806  0115                     	;# 
   807  0116                     	;# 
   808  0117                     	;# 
   809  0118                     	;# 
   810  0119                     	;# 
   811  011A                     	;# 
   812  011B                     	;# 
   813  011D                     	;# 
   814  011E                     	;# 
   815  018C                     	;# 
   816  018E                     	;# 
   817  0191                     	;# 
   818  0191                     	;# 
   819  0192                     	;# 
   820  0193                     	;# 
   821  0193                     	;# 
   822  0193                     	;# 
   823  0194                     	;# 
   824  0195                     	;# 
   825  0196                     	;# 
   826  0199                     	;# 
   827  019A                     	;# 
   828  019B                     	;# 
   829  019B                     	;# 
   830  019C                     	;# 
   831  019D                     	;# 
   832  019E                     	;# 
   833  019F                     	;# 
   834  020C                     	;# 
   835  020E                     	;# 
   836  0211                     	;# 
   837  0211                     	;# 
   838  0212                     	;# 
   839  0212                     	;# 
   840  0213                     	;# 
   841  0213                     	;# 
   842  0214                     	;# 
   843  0214                     	;# 
   844  0215                     	;# 
   845  0215                     	;# 
   846  0215                     	;# 
   847  0216                     	;# 
   848  0216                     	;# 
   849  0217                     	;# 
   850  0217                     	;# 
   851  0291                     	;# 
   852  0291                     	;# 
   853  0292                     	;# 
   854  0293                     	;# 
   855  0294                     	;# 
   856  0295                     	;# 
   857  0295                     	;# 
   858  0296                     	;# 
   859  0298                     	;# 
   860  0298                     	;# 
   861  0299                     	;# 
   862  029A                     	;# 
   863  029B                     	;# 
   864  029C                     	;# 
   865  029D                     	;# 
   866  029E                     	;# 
   867  0311                     	;# 
   868  0311                     	;# 
   869  0312                     	;# 
   870  0313                     	;# 
   871  0318                     	;# 
   872  0318                     	;# 
   873  0319                     	;# 
   874  031A                     	;# 
   875  038C                     	;# 
   876  038E                     	;# 
   877  0391                     	;# 
   878  0392                     	;# 
   879  0393                     	;# 
   880  039A                     	;# 
   881  039C                     	;# 
   882  039D                     	;# 
   883  039E                     	;# 
   884  039F                     	;# 
   885  0415                     	;# 
   886  0416                     	;# 
   887  0417                     	;# 
   888  041C                     	;# 
   889  041D                     	;# 
   890  041E                     	;# 
   891  0FE4                     	;# 
   892  0FE5                     	;# 
   893  0FE6                     	;# 
   894  0FE7                     	;# 
   895  0FE8                     	;# 
   896  0FE9                     	;# 
   897  0FEA                     	;# 
   898  0FEB                     	;# 
   899  0FED                     	;# 
   900  0FEE                     	;# 
   901  0FEF                     	;_irparams
   902  000B                     _INTCONbits	set	11
   903  000E                     _PORTCbits	set	14
   904  0015                     _TMR0	set	21
   905  0095                     _OPTION_REG	set	149
   906  0095                     _OPTION_REGbits	set	149
   907  0099                     _OSCCON	set	153
   908  0098                     _OSCTUNE	set	152
   909  008C                     _TRISA	set	140
   910  008E                     _TRISC	set	142
   911  0097                     _WDTCON	set	151
   912  04D6                     _PLLR	set	1238
   913  011D                     _APFCON0	set	285
   914  011E                     _APFCON1	set	286
   915  0116                     _BORCON	set	278
   916  010C                     _LATA	set	268
   917  010C                     _LATAbits	set	268
   918  010E                     _LATC	set	270
   919  010E                     _LATCbits	set	270
   920  018C                     _ANSELA	set	396
   921  018E                     _ANSELC	set	398
   922  020C                     _WPUA	set	524
   923  020E                     _WPUC	set	526
   924                           
   925                           	psect	text0
   926  0000                     __ptext0:	
   927                           ; #config settings
   928                           
   929                           
   930                           ;psect for function _TMR0_ISR
   931  0000                     
   932                           	psect	cinit
   933  0013                     start_initialization:	
   934  0013                     __initialization:		;BIGRAM
   935                           
   936                           ; Clear objects allocated to BIGRAM
   937  0013  3021               	movlw	low (0+8993)
   938  0014  0084               	movwf	4
   939  0015  3023               	movlw	high (0+8993)
   940  0016  0085               	movwf	5
   941  0017  30CF               	movlw	207
   942  0018  00FE               	movwf	btemp
   943  0019  3000               	movlw	0
   944  001A  00FF               	movwf	btemp+1
   945  001B  3181  21F9         	fcall	clear_ram0
   946                           
   947                           ; Clear objects allocated to COMMON
   948  001D  01F0               	clrf	__pbssCOMMON& (0+127)
   949  001E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   950  001F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   951  0020  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   952  0021  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   953  0022  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   954  0023  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   955  0024  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   956                           
   957                           ; Clear objects allocated to BANK0
   958  0025  01A0               	clrf	__pbssBANK0& (0+127)
   959  0026                     end_of_initialization:	
   960                           ;End of C runtime variable initialization code
   961                           
   962  0026                     __end_of__initialization:	
   963  0026  0020               	movlb	0
   964  0027  3181  299D         	ljmp	_main	;jump to C main() function
   965                           
   966                           	psect	bssCOMMON
   967  0070                     __pbssCOMMON:	
   968  0070                     _irdata:	
   969  0070                     	ds	1
   970  0071                     _t0:	
   971  0071                     	ds	1
   972  0072                     _t00:	
   973  0072                     	ds	1
   974  0073                     _t1:	
   975  0073                     	ds	1
   976  0074                     _t2:	
   977  0074                     	ds	1
   978  0075                     _t_4ms:	
   979  0075                     	ds	1
   980  0076                     _timer0ReloadVal:	
   981  0076                     	ds	1
   982  0077                     _timers1:	
   983  0077                     	ds	1
   984                           
   985                           	psect	bssBANK0
   986  0020                     __pbssBANK0:	
   987  0020                     _varAjuste:	
   988  0020                     	ds	1
   989                           
   990                           	psect	clrtext
   991  01F9                     clear_ram0:	
   992                           ;	Called with FSR0 containing the base address, and
   993                           ;	btemp/btemp+1 has the size to clear
   994                           
   995  01F9  0064               	clrwdt	;clear the watchdog before getting into this loop
   996  01FA                     clrloop0:	
   997  01FA  0180               	clrf	0	;clear RAM location pointed to by FSR
   998  01FB  3101               	addfsr 0,1
   999  01FC  3001               	movlw	1
  1000  01FD  02FE               	subwf	126,f
  1001  01FE  3000               	movlw	0
  1002  01FF  3BFF               	subwfb	127,f
  1003  0200  087F               	movf	127,w
  1004  0201  047E               	iorwf	126,w
  1005  0202  1903               	btfsc	3,2
  1006  0203  3400               	retlw	0	;all done for this memory range, return
  1007  0204  29FA               	goto	clrloop0	;have we reached the end yet?
  1008                           
  1009                           	psect	cstackCOMMON
  1010  0078                     __pcstackCOMMON:	
  1011  0078                     ?_PIN_MANAGER_Initialize:	
  1012  0078                     ?_OSCILLATOR_Initialize:	
  1013                           ; 0 bytes @ 0x0
  1014                           
  1015  0078                     ?_WDT_Initialize:	
  1016                           ; 0 bytes @ 0x0
  1017                           
  1018  0078                     ?_TMR0_Initialize:	
  1019                           ; 0 bytes @ 0x0
  1020                           
  1021  0078                     ?_TMR0_ISR:	
  1022                           ; 0 bytes @ 0x0
  1023                           
  1024  0078                     ??_TMR0_ISR:	
  1025                           ; 0 bytes @ 0x0
  1026                           
  1027  0078                     ?_TMR0_clearExpireFlag:	
  1028                           ; 0 bytes @ 0x0
  1029                           
  1030  0078                     ?_INTERRUPT_InterruptManager:	
  1031                           ; 0 bytes @ 0x0
  1032                           
  1033  0078                     ?_SYSTEM_Initialize:	
  1034                           ; 0 bytes @ 0x0
  1035                           
  1036  0078                     ?_irRemote_Analizar:	
  1037                           ; 0 bytes @ 0x0
  1038                           
  1039  0078                     ?_main:	
  1040                           ; 0 bytes @ 0x0
  1041                           
  1042  0078                     ?_TMR0_expire:	
  1043                           ; 0 bytes @ 0x0
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x0
  1047  0078                     	ds	1
  1048  0079                     ??_INTERRUPT_InterruptManager:	
  1049                           
  1050                           ; 0 bytes @ 0x1
  1051  0079                     	ds	1
  1052  007A                     ??_PIN_MANAGER_Initialize:	
  1053  007A                     ??_OSCILLATOR_Initialize:	
  1054                           ; 0 bytes @ 0x2
  1055                           
  1056  007A                     ??_WDT_Initialize:	
  1057                           ; 0 bytes @ 0x2
  1058                           
  1059  007A                     ??_TMR0_Initialize:	
  1060                           ; 0 bytes @ 0x2
  1061                           
  1062  007A                     ??_TMR0_expire:	
  1063                           ; 0 bytes @ 0x2
  1064                           
  1065  007A                     ??_TMR0_clearExpireFlag:	
  1066                           ; 0 bytes @ 0x2
  1067                           
  1068  007A                     ??_irRemote_Analizar:	
  1069                           ; 0 bytes @ 0x2
  1070                           
  1071                           
  1072                           ; 0 bytes @ 0x2
  1073  007A                     	ds	1
  1074  007B                     ??_SYSTEM_Initialize:	
  1075  007B                     TMR0_expire@flagi:	
  1076                           ; 0 bytes @ 0x3
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0x3
  1080  007B                     	ds	1
  1081  007C                     TMR0_clearExpireFlag@flagi:	
  1082                           
  1083                           ; 1 bytes @ 0x4
  1084  007C                     	ds	2
  1085  007E                     ??_main:	
  1086                           
  1087                           	psect	maintext
  1088  019D                     __pmaintext:	
  1089                           ; 0 bytes @ 0x6
  1090 ;;
  1091 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1092 ;;
  1093 ;; *************** function _main *****************
  1094 ;; Defined at:
  1095 ;;		line 49 in file "main.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;		None               void
  1102 ;; Registers used:
  1103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 17F/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels required when called:    4
  1115 ;; This function calls:
  1116 ;;		_SYSTEM_Initialize
  1117 ;;		_TMR0_clearExpireFlag
  1118 ;;		_TMR0_expire
  1119 ;;		_irRemote_Analizar
  1120 ;; This function is called by:
  1121 ;;		Startup code after reset
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _main
  1127  019D                     _main:	
  1128                           
  1129                           ;main.c: 52: SYSTEM_Initialize();
  1130                           
  1131                           ;incstack = 0
  1132                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1133  019D  3182  2205  3181   	fcall	_SYSTEM_Initialize
  1134                           
  1135                           ;main.c: 58: (INTCONbits.GIE = 1);
  1136  01A0  178B               	bsf	11,7	;volatile
  1137                           
  1138                           ;main.c: 61: (INTCONbits.PEIE = 1);
  1139  01A1  170B               	bsf	11,6	;volatile
  1140                           
  1141                           ;main.c: 69: do { LATCbits.LATC2 = 0; } while(0);
  1142  01A2  0022               	movlb	2	; select bank2
  1143  01A3  110E               	bcf	14,2	;volatile
  1144                           
  1145                           ;main.c: 70: do { LATAbits.LATA2 = 0; } while(0);
  1146  01A4  110C               	bcf	12,2	;volatile
  1147                           
  1148                           ;main.c: 71: do { LATCbits.LATC3 = 0; } while(0);
  1149  01A5  118E               	bcf	14,3	;volatile
  1150                           
  1151                           ;main.c: 73: do { LATCbits.LATC2 = 1; } while(0);
  1152  01A6  150E               	bsf	14,2	;volatile
  1153                           
  1154                           ;main.c: 74: do { LATAbits.LATA2 = 1; } while(0);
  1155  01A7  150C               	bsf	12,2	;volatile
  1156                           
  1157                           ;main.c: 75: do { LATCbits.LATC3 = 1; } while(0);
  1158  01A8  158E               	bsf	14,3	;volatile
  1159  01A9                     l181:	
  1160                           ;main.c: 77: while (1)
  1161                           
  1162                           
  1163                           ;main.c: 78: {
  1164                           ;main.c: 81: if (TMR0_expire (7) )
  1165  01A9  3007               	movlw	7
  1166  01AA  3181  21DD  3181   	fcall	_TMR0_expire
  1167  01AD  3A00               	xorlw	0
  1168  01AE  1903               	skipnz
  1169  01AF  29A9               	goto	l181
  1170                           
  1171                           ;main.c: 82: {
  1172                           ;main.c: 83: TMR0_clearExpireFlag ( 7 );
  1173  01B0  3007               	movlw	7
  1174  01B1  3181  21EB  3181   	fcall	_TMR0_clearExpireFlag
  1175                           
  1176                           ;main.c: 84: irRemote_Analizar();
  1177  01B4  3180  2029  3181   	fcall	_irRemote_Analizar
  1178  01B7  29A9               	goto	l181
  1179  01B8                     __end_of_main:	
  1180                           
  1181                           	psect	text1
  1182  0029                     __ptext1:	
  1183 ;; *************** function _irRemote_Analizar *****************
  1184 ;; Defined at:
  1185 ;;		line 6 in file "irRemote.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;		None               void
  1192 ;; Registers used:
  1193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1201 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1202 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1203 ;;Total ram usage:        4 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    2
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           
  1214                           ;psect for function _irRemote_Analizar
  1215  0029                     _irRemote_Analizar:	
  1216                           
  1217                           ;irRemote.c: 9: irdata = (uint8_t)PORTCbits.RC4;
  1218                           
  1219                           ;incstack = 0
  1220                           ; Regs used in _irRemote_Analizar: [wreg-fsr1h+status,2+status,0]
  1221  0029  3000               	movlw	0
  1222  002A  0020               	movlb	0	; select bank0
  1223  002B  1A0E               	btfsc	14,4	;volatile
  1224  002C  3001               	movlw	1
  1225  002D  00F0               	movwf	_irdata
  1226                           
  1227                           ;irRemote.c: 11: irparams.timer++;
  1228  002E  3021               	movlw	33
  1229  002F  0086               	movwf	6
  1230  0030  3023               	movlw	35
  1231  0031  0087               	movwf	7
  1232  0032  3142               	addfsr 1,2
  1233  0033  3001               	movlw	1
  1234  0034  0781               	addwf	1,f
  1235  0035  3141               	addfsr 1,1
  1236  0036  1803               	skipnc
  1237  0037  0A81               	incf	1,f
  1238                           
  1239                           ;irRemote.c: 13: if (irparams.rawlen >= 101)
  1240  0038  3021               	movlw	33
  1241  0039  0086               	movwf	6
  1242  003A  3023               	movlw	35
  1243  003B  0087               	movwf	7
  1244  003C  3141               	addfsr 1,1
  1245  003D  3065               	movlw	101
  1246  003E  0201               	subwf	1,w
  1247  003F  1C03               	skipc
  1248  0040  2945               	goto	l784
  1249                           
  1250                           ;irRemote.c: 14: irparams.rcvstate = 6;
  1251  0041  3021               	movlw	33
  1252  0042  0086               	movwf	6
  1253  0043  3023               	movlw	35
  1254  0044  0087               	movwf	7
  1255  0045  3006               	movlw	6
  1256  0046  3FC0               	movwi [0]fsr1
  1257                           
  1258                           ;irRemote.c: 16: switch(irparams.rcvstate)
  1259  0047  2945               	goto	l784
  1260  0048                     l734:	
  1261                           ;irRemote.c: 17: {
  1262                           ;irRemote.c: 19: case 2:
  1263                           
  1264                           
  1265                           ;irRemote.c: 20: if (irdata == 0)
  1266  0048  08F0               	movf	_irdata,f
  1267  0049  1D03               	skipz
  1268  004A  0008               	return
  1269                           
  1270                           ;irRemote.c: 21: {
  1271                           ;irRemote.c: 22: if (irparams.timer < (5000/50))
  1272  004B  3021               	movlw	33
  1273  004C  0086               	movwf	6
  1274  004D  3023               	movlw	35
  1275  004E  0087               	movwf	7
  1276  004F  3142               	addfsr 1,2
  1277  0050  3F40               	moviw [0]fsr1
  1278  0051  00FA               	movwf	??_irRemote_Analizar
  1279  0052  3F41               	moviw [1]fsr1
  1280  0053  00FB               	movwf	??_irRemote_Analizar+1
  1281  0054  3000               	movlw	0
  1282  0055  027B               	subwf	??_irRemote_Analizar+1,w
  1283  0056  3064               	movlw	100
  1284  0057  1903               	skipnz
  1285  0058  027A               	subwf	??_irRemote_Analizar,w
  1286  0059  1803               	skipnc
  1287  005A  2864               	goto	l740
  1288                           
  1289                           ;irRemote.c: 23: {
  1290                           ;irRemote.c: 24: irparams.timer = 0;
  1291  005B  3021               	movlw	33
  1292  005C  0086               	movwf	6
  1293  005D  3023               	movlw	35
  1294  005E  0087               	movwf	7
  1295  005F  3142               	addfsr 1,2
  1296  0060  3000               	movlw	0
  1297  0061  3FC0               	movwi [0]fsr1
  1298  0062  3FC1               	movwi [1]fsr1
  1299                           
  1300                           ;irRemote.c: 26: }
  1301  0063  0008               	return
  1302  0064                     l740:	
  1303                           
  1304                           ;irRemote.c: 27: else
  1305                           ;irRemote.c: 28: {
  1306                           ;irRemote.c: 30: irparams.overflow = 0;
  1307  0064  30EF               	movlw	239
  1308  0065  0086               	movwf	6
  1309  0066  3023               	movlw	35
  1310  0067  0087               	movwf	7
  1311  0068  0181               	clrf	1
  1312                           
  1313                           ;irRemote.c: 31: irparams.rawlen = 0;
  1314  0069  3021               	movlw	33
  1315  006A  0086               	movwf	6
  1316  006B  3023               	movlw	35
  1317  006C  0087               	movwf	7
  1318  006D  3141               	addfsr 1,1
  1319  006E  0181               	clrf	1
  1320                           
  1321                           ;irRemote.c: 32: irparams.rawbuf[irparams.rawlen++] = irparams.timer;
  1322  006F  3021               	movlw	33
  1323  0070  0086               	movwf	6
  1324  0071  3023               	movlw	35
  1325  0072  0087               	movwf	7
  1326  0073  3142               	addfsr 1,2
  1327  0074  3021               	movlw	33
  1328  0075  0084               	movwf	4
  1329  0076  3023               	movlw	35
  1330  0077  0085               	movwf	5
  1331  0078  3101               	addfsr 0,1
  1332  0079  0800               	movf	0,w
  1333  007A  00FA               	movwf	??_irRemote_Analizar
  1334  007B  01FB               	clrf	??_irRemote_Analizar+1
  1335  007C  35FA               	lslf	??_irRemote_Analizar,f
  1336  007D  0DFB               	rlf	??_irRemote_Analizar+1,f
  1337  007E  3025               	movlw	37
  1338  007F  00FC               	movwf	??_irRemote_Analizar+2
  1339  0080  3023               	movlw	35
  1340  0081  00FD               	movwf	??_irRemote_Analizar+3
  1341  0082  087A               	movf	??_irRemote_Analizar,w
  1342  0083  077C               	addwf	??_irRemote_Analizar+2,w
  1343  0084  0084               	movwf	4
  1344  0085  087B               	movf	??_irRemote_Analizar+1,w
  1345  0086  3D7D               	addwfc	??_irRemote_Analizar+3,w
  1346  0087  0085               	movwf	5
  1347  0088  3F40               	moviw [0]fsr1
  1348  0089  3F80               	movwi [0]fsr0
  1349  008A  3F41               	moviw [1]fsr1
  1350  008B  3F81               	movwi [1]fsr0
  1351  008C  3001               	movlw	1
  1352  008D  00FA               	movwf	??_irRemote_Analizar
  1353  008E  3021               	movlw	33
  1354  008F  0086               	movwf	6
  1355  0090  3023               	movlw	35
  1356  0091  0087               	movwf	7
  1357  0092  3141               	addfsr 1,1
  1358  0093  087A               	movf	??_irRemote_Analizar,w
  1359  0094  0781               	addwf	1,f
  1360                           
  1361                           ;irRemote.c: 33: irparams.timer = 0;
  1362  0095  3021               	movlw	33
  1363  0096  0086               	movwf	6
  1364  0097  3023               	movlw	35
  1365  0098  0087               	movwf	7
  1366  0099  3142               	addfsr 1,2
  1367  009A  3000               	movlw	0
  1368  009B  3FC0               	movwi [0]fsr1
  1369  009C  3FC1               	movwi [1]fsr1
  1370                           
  1371                           ;irRemote.c: 34: irparams.rcvstate = 3;
  1372  009D  3021               	movlw	33
  1373  009E  0086               	movwf	6
  1374  009F  3023               	movlw	35
  1375  00A0  0087               	movwf	7
  1376  00A1  3003               	movlw	3
  1377  00A2  3FC0               	movwi [0]fsr1
  1378                           
  1379                           ;irRemote.c: 35: }
  1380                           ;irRemote.c: 36: }
  1381                           ;irRemote.c: 37: break;
  1382  00A3  0008               	return
  1383  00A4                     l752:	
  1384                           ;irRemote.c: 39: case 3:
  1385                           
  1386                           
  1387                           ;irRemote.c: 40: if (irdata == 1)
  1388  00A4  0870               	movf	_irdata,w
  1389  00A5  3A01               	xorlw	1
  1390  00A6  1D03               	skipz
  1391  00A7  0008               	return
  1392                           
  1393                           ;irRemote.c: 41: {
  1394                           ;irRemote.c: 42: irparams.rawbuf[irparams.rawlen++] = irparams.timer;
  1395  00A8  3021               	movlw	33
  1396  00A9  0086               	movwf	6
  1397  00AA  3023               	movlw	35
  1398  00AB  0087               	movwf	7
  1399  00AC  3142               	addfsr 1,2
  1400  00AD  3021               	movlw	33
  1401  00AE  0084               	movwf	4
  1402  00AF  3023               	movlw	35
  1403  00B0  0085               	movwf	5
  1404  00B1  3101               	addfsr 0,1
  1405  00B2  0800               	movf	0,w
  1406  00B3  00FA               	movwf	??_irRemote_Analizar
  1407  00B4  01FB               	clrf	??_irRemote_Analizar+1
  1408  00B5  35FA               	lslf	??_irRemote_Analizar,f
  1409  00B6  0DFB               	rlf	??_irRemote_Analizar+1,f
  1410  00B7  3025               	movlw	37
  1411  00B8  00FC               	movwf	??_irRemote_Analizar+2
  1412  00B9  3023               	movlw	35
  1413  00BA  00FD               	movwf	??_irRemote_Analizar+3
  1414  00BB  087A               	movf	??_irRemote_Analizar,w
  1415  00BC  077C               	addwf	??_irRemote_Analizar+2,w
  1416  00BD  0084               	movwf	4
  1417  00BE  087B               	movf	??_irRemote_Analizar+1,w
  1418  00BF  3D7D               	addwfc	??_irRemote_Analizar+3,w
  1419  00C0  0085               	movwf	5
  1420  00C1  3F40               	moviw [0]fsr1
  1421  00C2  3F80               	movwi [0]fsr0
  1422  00C3  3F41               	moviw [1]fsr1
  1423  00C4  3F81               	movwi [1]fsr0
  1424  00C5  3001               	movlw	1
  1425  00C6  00FA               	movwf	??_irRemote_Analizar
  1426  00C7  3021               	movlw	33
  1427  00C8  0086               	movwf	6
  1428  00C9  3023               	movlw	35
  1429  00CA  0087               	movwf	7
  1430  00CB  3141               	addfsr 1,1
  1431  00CC  087A               	movf	??_irRemote_Analizar,w
  1432  00CD  0781               	addwf	1,f
  1433                           
  1434                           ;irRemote.c: 43: irparams.timer = 0;
  1435  00CE  3021               	movlw	33
  1436  00CF  0086               	movwf	6
  1437  00D0  3023               	movlw	35
  1438  00D1  0087               	movwf	7
  1439  00D2  3142               	addfsr 1,2
  1440  00D3  3000               	movlw	0
  1441  00D4  3FC0               	movwi [0]fsr1
  1442  00D5  3FC1               	movwi [1]fsr1
  1443                           
  1444                           ;irRemote.c: 44: irparams.rcvstate = 4;
  1445  00D6  3021               	movlw	33
  1446  00D7  0086               	movwf	6
  1447  00D8  3023               	movlw	35
  1448  00D9  0087               	movwf	7
  1449  00DA  3004               	movlw	4
  1450  00DB  3FC0               	movwi [0]fsr1
  1451                           
  1452                           ;irRemote.c: 45: }
  1453                           ;irRemote.c: 46: break;
  1454  00DC  0008               	return
  1455  00DD                     l762:	
  1456                           ;irRemote.c: 48: case 4:
  1457                           
  1458                           
  1459                           ;irRemote.c: 49: if (irdata == 0)
  1460  00DD  08F0               	movf	_irdata,f
  1461  00DE  1D03               	skipz
  1462  00DF  2915               	goto	l772
  1463                           
  1464                           ;irRemote.c: 50: {
  1465                           ;irRemote.c: 51: irparams.rawbuf[irparams.rawlen++] = irparams.timer;
  1466  00E0  3021               	movlw	33
  1467  00E1  0086               	movwf	6
  1468  00E2  3023               	movlw	35
  1469  00E3  0087               	movwf	7
  1470  00E4  3142               	addfsr 1,2
  1471  00E5  3021               	movlw	33
  1472  00E6  0084               	movwf	4
  1473  00E7  3023               	movlw	35
  1474  00E8  0085               	movwf	5
  1475  00E9  3101               	addfsr 0,1
  1476  00EA  0800               	movf	0,w
  1477  00EB  00FA               	movwf	??_irRemote_Analizar
  1478  00EC  01FB               	clrf	??_irRemote_Analizar+1
  1479  00ED  35FA               	lslf	??_irRemote_Analizar,f
  1480  00EE  0DFB               	rlf	??_irRemote_Analizar+1,f
  1481  00EF  3025               	movlw	37
  1482  00F0  00FC               	movwf	??_irRemote_Analizar+2
  1483  00F1  3023               	movlw	35
  1484  00F2  00FD               	movwf	??_irRemote_Analizar+3
  1485  00F3  087A               	movf	??_irRemote_Analizar,w
  1486  00F4  077C               	addwf	??_irRemote_Analizar+2,w
  1487  00F5  0084               	movwf	4
  1488  00F6  087B               	movf	??_irRemote_Analizar+1,w
  1489  00F7  3D7D               	addwfc	??_irRemote_Analizar+3,w
  1490  00F8  0085               	movwf	5
  1491  00F9  3F40               	moviw [0]fsr1
  1492  00FA  3F80               	movwi [0]fsr0
  1493  00FB  3F41               	moviw [1]fsr1
  1494  00FC  3F81               	movwi [1]fsr0
  1495  00FD  3001               	movlw	1
  1496  00FE  00FA               	movwf	??_irRemote_Analizar
  1497  00FF  3021               	movlw	33
  1498  0100  0086               	movwf	6
  1499  0101  3023               	movlw	35
  1500  0102  0087               	movwf	7
  1501  0103  3141               	addfsr 1,1
  1502  0104  087A               	movf	??_irRemote_Analizar,w
  1503  0105  0781               	addwf	1,f
  1504                           
  1505                           ;irRemote.c: 52: irparams.timer = 0;
  1506  0106  3021               	movlw	33
  1507  0107  0086               	movwf	6
  1508  0108  3023               	movlw	35
  1509  0109  0087               	movwf	7
  1510  010A  3142               	addfsr 1,2
  1511  010B  3000               	movlw	0
  1512  010C  3FC0               	movwi [0]fsr1
  1513  010D  3FC1               	movwi [1]fsr1
  1514                           
  1515                           ;irRemote.c: 53: irparams.rcvstate = 3;
  1516  010E  3021               	movlw	33
  1517  010F  0086               	movwf	6
  1518  0110  3023               	movlw	35
  1519  0111  0087               	movwf	7
  1520  0112  3003               	movlw	3
  1521  0113  3FC0               	movwi [0]fsr1
  1522                           
  1523                           ;irRemote.c: 55: }
  1524  0114  0008               	return
  1525  0115                     l772:	
  1526                           
  1527                           ;irRemote.c: 56: else if (irparams.timer > (5000/50))
  1528  0115  3021               	movlw	33
  1529  0116  0086               	movwf	6
  1530  0117  3023               	movlw	35
  1531  0118  0087               	movwf	7
  1532  0119  3142               	addfsr 1,2
  1533  011A  3F40               	moviw [0]fsr1
  1534  011B  00FA               	movwf	??_irRemote_Analizar
  1535  011C  3F41               	moviw [1]fsr1
  1536  011D  00FB               	movwf	??_irRemote_Analizar+1
  1537  011E  3000               	movlw	0
  1538  011F  027B               	subwf	??_irRemote_Analizar+1,w
  1539  0120  3065               	movlw	101
  1540  0121  1903               	skipnz
  1541  0122  027A               	subwf	??_irRemote_Analizar,w
  1542  0123  1C03               	skipc
  1543  0124  0008               	return
  1544                           
  1545                           ;irRemote.c: 57: {
  1546                           ;irRemote.c: 62: irparams.rcvstate = 5;
  1547  0125  3021               	movlw	33
  1548  0126  0086               	movwf	6
  1549  0127  3023               	movlw	35
  1550  0128  0087               	movwf	7
  1551  0129  3005               	movlw	5
  1552  012A  3FC0               	movwi [0]fsr1
  1553                           
  1554                           ;irRemote.c: 63: }
  1555                           ;irRemote.c: 64: break;
  1556  012B  0008               	return
  1557  012C                     l776:	
  1558                           ;irRemote.c: 66: case 5:
  1559                           
  1560                           
  1561                           ;irRemote.c: 67: if (irdata == 0)
  1562  012C  08F0               	movf	_irdata,f
  1563  012D  1D03               	skipz
  1564  012E  0008               	return
  1565                           
  1566                           ;irRemote.c: 68: irparams.timer = 0 ;
  1567  012F  3021               	movlw	33
  1568  0130  0086               	movwf	6
  1569  0131  3023               	movlw	35
  1570  0132  0087               	movwf	7
  1571  0133  3142               	addfsr 1,2
  1572  0134  3000               	movlw	0
  1573  0135  3FC0               	movwi [0]fsr1
  1574  0136  3FC1               	movwi [1]fsr1
  1575                           
  1576                           ;irRemote.c: 69: break;
  1577  0137  0008               	return
  1578  0138                     l780:	
  1579                           ;irRemote.c: 71: case 6:
  1580                           
  1581                           
  1582                           ;irRemote.c: 72: irparams.overflow = 1;
  1583  0138  30EF               	movlw	239
  1584  0139  0086               	movwf	6
  1585  013A  3023               	movlw	35
  1586  013B  0087               	movwf	7
  1587  013C  3001               	movlw	1
  1588  013D  0081               	movwf	1
  1589                           
  1590                           ;irRemote.c: 73: irparams.rcvstate = 5;
  1591  013E  3021               	movlw	33
  1592  013F  0086               	movwf	6
  1593  0140  3023               	movlw	35
  1594  0141  0087               	movwf	7
  1595  0142  3005               	movlw	5
  1596  0143  3FC0               	movwi [0]fsr1
  1597                           
  1598                           ;irRemote.c: 75: }
  1599                           
  1600                           ;irRemote.c: 74: break;
  1601  0144  0008               	return
  1602  0145                     l784:	
  1603  0145  3021               	movlw	33
  1604  0146  0086               	movwf	6
  1605  0147  3023               	movlw	35
  1606  0148  0087               	movwf	7
  1607  0149  0801               	movf	1,w
  1608                           
  1609                           ; Switch size 1, requested type "space"
  1610                           ; Number of cases is 5, Range of values is 2 to 6
  1611                           ; switch strategies available:
  1612                           ; Name         Instructions Cycles
  1613                           ; simple_byte           16     9 (average)
  1614                           ; direct_byte           19     9 (fixed)
  1615                           ; jumptable            263     9 (fixed)
  1616                           ;	Chosen strategy is simple_byte
  1617  014A  3A02               	xorlw	2	; case 2
  1618  014B  1903               	skipnz
  1619  014C  2848               	goto	l734
  1620  014D  3A01               	xorlw	1	; case 3
  1621  014E  1903               	skipnz
  1622  014F  28A4               	goto	l752
  1623  0150  3A07               	xorlw	7	; case 4
  1624  0151  1903               	skipnz
  1625  0152  28DD               	goto	l762
  1626  0153  3A01               	xorlw	1	; case 5
  1627  0154  1903               	skipnz
  1628  0155  292C               	goto	l776
  1629  0156  3A03               	xorlw	3	; case 6
  1630  0157  1903               	skipnz
  1631  0158  2938               	goto	l780
  1632  0159  295A               	goto	l152
  1633  015A                     l152:	
  1634  015A  0008               	return
  1635  015B                     __end_of_irRemote_Analizar:	
  1636                           
  1637                           	psect	text2
  1638  01DD                     __ptext2:	
  1639 ;; *************** function _TMR0_expire *****************
  1640 ;; Defined at:
  1641 ;;		line 208 in file "mcc_generated_files/tmr0.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  flagi           1    wreg     unsigned char 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  flagi           1    3[COMMON] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      unsigned char 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1659 ;;Total ram usage:        2 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    2
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           
  1670                           ;psect for function _TMR0_expire
  1671  01DD                     _TMR0_expire:	
  1672                           
  1673                           ;incstack = 0
  1674                           ; Regs used in _TMR0_expire: [wreg+status,2+status,0]
  1675                           ;TMR0_expire@flagi stored from wreg
  1676  01DD  00FB               	movwf	TMR0_expire@flagi
  1677                           
  1678                           ;tmr0.c: 210: return ( ((timers1.byte) & (1 <<(flagi))) != 0 );
  1679  01DE  3001               	movlw	1
  1680  01DF  00FA               	movwf	??_TMR0_expire
  1681  01E0  0A7B               	incf	TMR0_expire@flagi,w
  1682  01E1  29E3               	goto	u94
  1683  01E2                     u95:	
  1684  01E2  35FA               	lslf	??_TMR0_expire,f
  1685  01E3                     u94:	
  1686  01E3  0B89               	decfsz	9,f
  1687  01E4  29E2               	goto	u95
  1688  01E5  087A               	movf	??_TMR0_expire,w
  1689  01E6  0577               	andwf	_timers1,w	;volatile
  1690  01E7  3000               	movlw	0
  1691  01E8  1D03               	btfss	3,2
  1692  01E9  3001               	movlw	1
  1693  01EA  0008               	return
  1694  01EB                     __end_of_TMR0_expire:	
  1695                           
  1696                           	psect	text3
  1697  01EB                     __ptext3:	
  1698 ;; *************** function _TMR0_clearExpireFlag *****************
  1699 ;; Defined at:
  1700 ;;		line 213 in file "mcc_generated_files/tmr0.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  flagi           1    wreg     unsigned char 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  flagi           1    4[COMMON] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;		None               void
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1717 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1718 ;;Total ram usage:        3 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    2
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _TMR0_clearExpireFlag
  1730  01EB                     _TMR0_clearExpireFlag:	
  1731                           
  1732                           ;incstack = 0
  1733                           ; Regs used in _TMR0_clearExpireFlag: [wreg+status,2+status,0]
  1734                           ;TMR0_clearExpireFlag@flagi stored from wreg
  1735  01EB  00FC               	movwf	TMR0_clearExpireFlag@flagi
  1736                           
  1737                           ;tmr0.c: 215: ((timers1.byte) &= ~(1 << (flagi)));
  1738  01EC  3001               	movlw	1
  1739  01ED  00FA               	movwf	??_TMR0_clearExpireFlag
  1740  01EE  0A7C               	incf	TMR0_clearExpireFlag@flagi,w
  1741  01EF  29F1               	goto	u104
  1742  01F0                     u105:	
  1743  01F0  35FA               	lslf	??_TMR0_clearExpireFlag,f
  1744  01F1                     u104:	
  1745  01F1  0B89               	decfsz	9,f
  1746  01F2  29F0               	goto	u105
  1747  01F3  087A               	movf	??_TMR0_clearExpireFlag,w
  1748  01F4  3AFF               	xorlw	255
  1749  01F5  00FB               	movwf	??_TMR0_clearExpireFlag+1
  1750  01F6  087B               	movf	??_TMR0_clearExpireFlag+1,w
  1751  01F7  05F7               	andwf	_timers1,f	;volatile
  1752  01F8  0008               	return
  1753  01F9                     __end_of_TMR0_clearExpireFlag:	
  1754                           
  1755                           	psect	text4
  1756  0205                     __ptext4:	
  1757 ;; *************** function _SYSTEM_Initialize *****************
  1758 ;; Defined at:
  1759 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;		None               void
  1766 ;; Registers used:
  1767 ;;		wreg, status,2, status,0, pclath, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1777 ;;Total ram usage:        0 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    3
  1780 ;; This function calls:
  1781 ;;		_OSCILLATOR_Initialize
  1782 ;;		_PIN_MANAGER_Initialize
  1783 ;;		_TMR0_Initialize
  1784 ;;		_WDT_Initialize
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           
  1791                           ;psect for function _SYSTEM_Initialize
  1792  0205                     _SYSTEM_Initialize:	
  1793                           
  1794                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  1795                           
  1796                           ;incstack = 0
  1797                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1798  0205  3181  21B8  3182   	fcall	_PIN_MANAGER_Initialize
  1799                           
  1800                           ;mcc.c: 54: OSCILLATOR_Initialize();
  1801  0208  3182  2211  3182   	fcall	_OSCILLATOR_Initialize
  1802                           
  1803                           ;mcc.c: 55: WDT_Initialize();
  1804  020B  3182  221B  3182   	fcall	_WDT_Initialize
  1805                           
  1806                           ;mcc.c: 56: TMR0_Initialize();
  1807  020E  3181  21CE         	fcall	_TMR0_Initialize
  1808  0210  0008               	return
  1809  0211                     __end_of_SYSTEM_Initialize:	
  1810                           
  1811                           	psect	text5
  1812  021B                     __ptext5:	
  1813 ;; *************** function _WDT_Initialize *****************
  1814 ;; Defined at:
  1815 ;;		line 73 in file "mcc_generated_files/mcc.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;		None               void
  1822 ;; Registers used:
  1823 ;;		wreg
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1833 ;;Total ram usage:        0 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    2
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_SYSTEM_Initialize
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           
  1844                           ;psect for function _WDT_Initialize
  1845  021B                     _WDT_Initialize:	
  1846                           
  1847                           ;mcc.c: 76: WDTCON = 0x16;
  1848                           
  1849                           ;incstack = 0
  1850                           ; Regs used in _WDT_Initialize: [wreg]
  1851  021B  3016               	movlw	22
  1852  021C  0021               	movlb	1	; select bank1
  1853  021D  0097               	movwf	23	;volatile
  1854  021E  0008               	return
  1855  021F                     __end_of_WDT_Initialize:	
  1856                           
  1857                           	psect	text6
  1858  01CE                     __ptext6:	
  1859 ;; *************** function _TMR0_Initialize *****************
  1860 ;; Defined at:
  1861 ;;		line 91 in file "mcc_generated_files/tmr0.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;		None               void
  1868 ;; Registers used:
  1869 ;;		wreg, status,2
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1879 ;;Total ram usage:        1 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    2
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_SYSTEM_Initialize
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           
  1890                           ;psect for function _TMR0_Initialize
  1891  01CE                     _TMR0_Initialize:	
  1892                           
  1893                           ;tmr0.c: 96: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 & 0x3F));
  1894                           
  1895                           ;incstack = 0
  1896                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  1897  01CE  0021               	movlb	1	; select bank1
  1898  01CF  0815               	movf	21,w	;volatile
  1899  01D0  39C0               	andlw	192
  1900  01D1  3811               	iorlw	17
  1901  01D2  0095               	movwf	21	;volatile
  1902                           
  1903                           ;tmr0.c: 99: TMR0 = 0x9C;
  1904  01D3  309C               	movlw	156
  1905  01D4  0020               	movlb	0	; select bank0
  1906  01D5  0095               	movwf	21	;volatile
  1907                           
  1908                           ;tmr0.c: 102: timer0ReloadVal= 156;
  1909  01D6  309C               	movlw	156
  1910  01D7  00FA               	movwf	??_TMR0_Initialize
  1911  01D8  087A               	movf	??_TMR0_Initialize,w
  1912  01D9  00F6               	movwf	_timer0ReloadVal	;volatile
  1913                           
  1914                           ;tmr0.c: 105: INTCONbits.TMR0IF = 0;
  1915  01DA  110B               	bcf	11,2	;volatile
  1916                           
  1917                           ;tmr0.c: 108: INTCONbits.TMR0IE = 1;
  1918  01DB  168B               	bsf	11,5	;volatile
  1919  01DC  0008               	return
  1920  01DD                     __end_of_TMR0_Initialize:	
  1921                           
  1922                           	psect	text7
  1923  01B8                     __ptext7:	
  1924 ;; *************** function _PIN_MANAGER_Initialize *****************
  1925 ;; Defined at:
  1926 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;		None               void
  1933 ;; Registers used:
  1934 ;;		wreg, status,2
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1944 ;;Total ram usage:        0 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    2
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_SYSTEM_Initialize
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function _PIN_MANAGER_Initialize
  1956  01B8                     _PIN_MANAGER_Initialize:	
  1957                           
  1958                           ;pin_manager.c: 60: LATA = 0x00;
  1959                           
  1960                           ;incstack = 0
  1961                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1962  01B8  0022               	movlb	2	; select bank2
  1963  01B9  018C               	clrf	12	;volatile
  1964                           
  1965                           ;pin_manager.c: 61: LATC = 0x00;
  1966  01BA  018E               	clrf	14	;volatile
  1967                           
  1968                           ;pin_manager.c: 66: TRISA = 0x2B;
  1969  01BB  302B               	movlw	43
  1970  01BC  0021               	movlb	1	; select bank1
  1971  01BD  008C               	movwf	12	;volatile
  1972                           
  1973                           ;pin_manager.c: 67: TRISC = 0x13;
  1974  01BE  3013               	movlw	19
  1975  01BF  008E               	movwf	14	;volatile
  1976                           
  1977                           ;pin_manager.c: 72: ANSELC = 0x0F;
  1978  01C0  300F               	movlw	15
  1979  01C1  0023               	movlb	3	; select bank3
  1980  01C2  008E               	movwf	14	;volatile
  1981                           
  1982                           ;pin_manager.c: 73: ANSELA = 0x17;
  1983  01C3  3017               	movlw	23
  1984  01C4  008C               	movwf	12	;volatile
  1985                           
  1986                           ;pin_manager.c: 78: WPUA = 0x00;
  1987  01C5  0024               	movlb	4	; select bank4
  1988  01C6  018C               	clrf	12	;volatile
  1989                           
  1990                           ;pin_manager.c: 79: WPUC = 0x00;
  1991  01C7  018E               	clrf	14	;volatile
  1992                           
  1993                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  1994  01C8  0021               	movlb	1	; select bank1
  1995  01C9  1795               	bsf	21,7	;volatile
  1996                           
  1997                           ;pin_manager.c: 86: APFCON0 = 0x00;
  1998  01CA  0022               	movlb	2	; select bank2
  1999  01CB  019D               	clrf	29	;volatile
  2000                           
  2001                           ;pin_manager.c: 87: APFCON1 = 0x00;
  2002  01CC  019E               	clrf	30	;volatile
  2003  01CD  0008               	return
  2004  01CE                     __end_of_PIN_MANAGER_Initialize:	
  2005                           
  2006                           	psect	text8
  2007  0211                     __ptext8:	
  2008 ;; *************** function _OSCILLATOR_Initialize *****************
  2009 ;; Defined at:
  2010 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;		None               void
  2017 ;; Registers used:
  2018 ;;		wreg, status,2
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2028 ;;Total ram usage:        0 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    2
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_SYSTEM_Initialize
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function _OSCILLATOR_Initialize
  2040  0211                     _OSCILLATOR_Initialize:	
  2041                           
  2042                           ;mcc.c: 62: OSCCON = 0x70;
  2043                           
  2044                           ;incstack = 0
  2045                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2046  0211  3070               	movlw	112
  2047  0212  0021               	movlb	1	; select bank1
  2048  0213  0099               	movwf	25	;volatile
  2049                           
  2050                           ;mcc.c: 64: OSCTUNE = 0x00;
  2051  0214  0198               	clrf	24	;volatile
  2052                           
  2053                           ;mcc.c: 66: BORCON = 0x00;
  2054  0215  0022               	movlb	2	; select bank2
  2055  0216  0196               	clrf	22	;volatile
  2056  0217                     l93:	
  2057                           ;mcc.c: 69: {
  2058                           
  2059                           ;mcc.c: 68: while(PLLR == 0)
  2060                           
  2061  0217  0021               	movlb	1	; select bank1
  2062  0218  1B1A               	btfsc	26,6	;volatile
  2063  0219  0008               	return
  2064  021A  2A17               	goto	l93
  2065  021B                     __end_of_OSCILLATOR_Initialize:	
  2066                           
  2067                           	psect	intentry
  2068  0004                     __pintentry:	
  2069 ;; *************** function _INTERRUPT_InterruptManager *****************
  2070 ;; Defined at:
  2071 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;		None               void
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2089 ;;Total ram usage:        1 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    1
  2092 ;; This function calls:
  2093 ;;		_TMR0_ISR
  2094 ;; This function is called by:
  2095 ;;		Interrupt level 1
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099  0004                     _INTERRUPT_InterruptManager:	
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2103  0004  3180               	pagesel	$
  2104  0005  0020               	movlb	0	; select bank0
  2105  0006  087F               	movf	127,w
  2106  0007  00F9               	movwf	??_INTERRUPT_InterruptManager
  2107                           
  2108                           ;interrupt_manager.c: 55: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2109  0008  1A8B               	btfsc	11,5	;volatile
  2110  0009  1D0B               	btfss	11,2	;volatile
  2111  000A  280D               	goto	i1l69
  2112                           
  2113                           ;interrupt_manager.c: 56: {
  2114                           ;interrupt_manager.c: 57: TMR0_ISR();
  2115  000B  3181  215B         	fcall	_TMR0_ISR
  2116  000D                     i1l69:	
  2117                           ;interrupt_manager.c: 59: else
  2118                           ;interrupt_manager.c: 60: {
  2119                           
  2120                           ;interrupt_manager.c: 58: }
  2121                           
  2122  000D  0879               	movf	??_INTERRUPT_InterruptManager,w
  2123  000E  0020               	movlb	0	; select bank0
  2124  000F  00FF               	movwf	127
  2125  0010  0009               	retfie
  2126  0011                     __end_of_INTERRUPT_InterruptManager:	
  2127                           
  2128                           	psect	text10
  2129  015B                     __ptext10:	
  2130 ;; *************** function _TMR0_ISR *****************
  2131 ;; Defined at:
  2132 ;;		line 135 in file "mcc_generated_files/tmr0.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;		None               void
  2139 ;; Registers used:
  2140 ;;		wreg, status,2, status,0
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2150 ;;Total ram usage:        1 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_INTERRUPT_InterruptManager
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _TMR0_ISR
  2161  015B                     _TMR0_ISR:	
  2162                           
  2163                           ;tmr0.c: 139: INTCONbits.TMR0IF = 0;
  2164                           
  2165                           ;incstack = 0
  2166                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0]
  2167  015B  110B               	bcf	11,2	;volatile
  2168                           
  2169                           ;tmr0.c: 141: TMR0 = timer0ReloadVal;
  2170  015C  0876               	movf	_timer0ReloadVal,w	;volatile
  2171  015D  0020               	movlb	0	; select bank0
  2172  015E  0095               	movwf	21	;volatile
  2173                           
  2174                           ;tmr0.c: 147: timers1.bits.useg50 = 1;
  2175  015F  17F7               	bsf	_timers1,7	;volatile
  2176                           
  2177                           ;tmr0.c: 151: t00++;
  2178  0160  3001               	movlw	1
  2179  0161  00F8               	movwf	??_TMR0_ISR
  2180  0162  0878               	movf	??_TMR0_ISR,w
  2181  0163  07F2               	addwf	_t00,f	;volatile
  2182                           
  2183                           ;tmr0.c: 152: do { LATCbits.LATC5 = 1; } while(0);
  2184  0164  0022               	movlb	2	; select bank2
  2185  0165  168E               	bsf	14,5	;volatile
  2186                           
  2187                           ;tmr0.c: 154: if( PORTCbits.RC4 == 0 )
  2188  0166  0020               	movlb	0	; select bank0
  2189  0167  1A0E               	btfsc	14,4	;volatile
  2190  0168  2974               	goto	i1l690
  2191                           
  2192                           ;tmr0.c: 155: do { LATAbits.LATA2 = ~LATAbits.LATA2; } while(0);
  2193  0169  1003               	clrc
  2194  016A  0022               	movlb	2	; select bank2
  2195  016B  1D0C               	btfss	12,2	;volatile
  2196  016C  1403               	setc
  2197  016D  1C03               	btfss	3,0
  2198  016E  2972               	goto	u3_20
  2199  016F  0022               	movlb	2	; select bank2
  2200  0170  150C               	bsf	12,2	;volatile
  2201  0171  2974               	goto	i1l690
  2202  0172                     u3_20:	
  2203  0172  0022               	movlb	2	; select bank2
  2204  0173  110C               	bcf	12,2	;volatile
  2205  0174                     i1l690:	
  2206                           
  2207                           ;tmr0.c: 157: if ( t00 == 5 )
  2208  0174  0872               	movf	_t00,w	;volatile
  2209  0175  3A05               	xorlw	5
  2210  0176  1D03               	skipz
  2211  0177  299A               	goto	i1l716
  2212                           
  2213                           ;tmr0.c: 158: {
  2214                           ;tmr0.c: 162: t00 = 0;
  2215  0178  01F2               	clrf	_t00	;volatile
  2216                           
  2217                           ;tmr0.c: 164: timers1.bits.useg250 = 1;
  2218  0179  1477               	bsf	_timers1,0	;volatile
  2219                           
  2220                           ;tmr0.c: 165: t0++;
  2221  017A  3001               	movlw	1
  2222  017B  00F8               	movwf	??_TMR0_ISR
  2223  017C  0878               	movf	??_TMR0_ISR,w
  2224  017D  07F1               	addwf	_t0,f	;volatile
  2225                           
  2226                           ;tmr0.c: 169: if ( ((t0) & (1 <<(2))) )
  2227  017E  1D71               	btfss	_t0,2	;volatile
  2228  017F  299A               	goto	i1l716
  2229                           
  2230                           ;tmr0.c: 170: {
  2231                           ;tmr0.c: 174: ((t0) &= ~(1 << (2)));
  2232  0180  30FB               	movlw	251
  2233  0181  00F8               	movwf	??_TMR0_ISR
  2234  0182  0878               	movf	??_TMR0_ISR,w
  2235  0183  05F1               	andwf	_t0,f	;volatile
  2236                           
  2237                           ;tmr0.c: 175: timers1.bits.mseg1 = 1;
  2238  0184  14F7               	bsf	_timers1,1	;volatile
  2239                           
  2240                           ;tmr0.c: 176: t1++;
  2241  0185  3001               	movlw	1
  2242  0186  00F8               	movwf	??_TMR0_ISR
  2243  0187  0878               	movf	??_TMR0_ISR,w
  2244  0188  07F3               	addwf	_t1,f	;volatile
  2245                           
  2246                           ;tmr0.c: 180: if ( ((t1) & (1 <<(2))) )
  2247  0189  1D73               	btfss	_t1,2	;volatile
  2248  018A  299A               	goto	i1l716
  2249                           
  2250                           ;tmr0.c: 181: {
  2251                           ;tmr0.c: 185: ((t1) &= ~(1 << (2)));
  2252  018B  30FB               	movlw	251
  2253  018C  00F8               	movwf	??_TMR0_ISR
  2254  018D  0878               	movf	??_TMR0_ISR,w
  2255  018E  05F3               	andwf	_t1,f	;volatile
  2256                           
  2257                           ;tmr0.c: 186: timers1.bits.mseg4 = 1;
  2258  018F  1577               	bsf	_timers1,2	;volatile
  2259                           
  2260                           ;tmr0.c: 187: t2++;
  2261  0190  3001               	movlw	1
  2262  0191  00F8               	movwf	??_TMR0_ISR
  2263  0192  0878               	movf	??_TMR0_ISR,w
  2264  0193  07F4               	addwf	_t2,f	;volatile
  2265                           
  2266                           ;tmr0.c: 190: if ( t2 >= 250 )
  2267  0194  30FA               	movlw	250
  2268  0195  0274               	subwf	_t2,w	;volatile
  2269  0196  1C03               	skipc
  2270  0197  299A               	goto	i1l716
  2271                           
  2272                           ;tmr0.c: 191: {
  2273                           ;tmr0.c: 195: t2 = 0;
  2274  0198  01F4               	clrf	_t2	;volatile
  2275                           
  2276                           ;tmr0.c: 196: timers1.bits.seg1 = 1;
  2277  0199  15F7               	bsf	_timers1,3	;volatile
  2278  019A                     i1l716:	
  2279                           ;tmr0.c: 198: }
  2280                           ;tmr0.c: 199: }
  2281                           ;tmr0.c: 202: }
  2282                           ;tmr0.c: 203: }
  2283                           ;tmr0.c: 204: do { LATCbits.LATC5 = 0; } while(0);
  2284                           
  2285  019A  0022               	movlb	2	; select bank2
  2286  019B  128E               	bcf	14,5	;volatile
  2287  019C  0008               	return
  2288  019D                     __end_of_TMR0_ISR:	
  2289  007E                     btemp	set	126	;btemp
  2290  007E                     wtemp	set	126
  2291  007E                     wtemp0	set	126
  2292  0080                     wtemp1	set	128
  2293  0082                     wtemp2	set	130
  2294  0084                     wtemp3	set	132
  2295  0086                     wtemp4	set	134
  2296  0088                     wtemp5	set	136
  2297  007F                     wtemp6	set	127
  2298  007E                     ttemp	set	126
  2299  007E                     ttemp0	set	126
  2300  0081                     ttemp1	set	129
  2301  0084                     ttemp2	set	132
  2302  0087                     ttemp3	set	135
  2303  007F                     ttemp4	set	127
  2304  007E                     ltemp	set	126
  2305  007E                     ltemp0	set	126
  2306  0082                     ltemp1	set	130
  2307  0086                     ltemp2	set	134
  2308  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      0       1
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10            1      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_irRemote_Analizar
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR0_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                  _SYSTEM_Initialize
               _TMR0_clearExpireFlag
                        _TMR0_expire
                  _irRemote_Analizar
 ---------------------------------------------------------------------------------
 (1) _irRemote_Analizar                                    4     4      0       0
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_expire                                          2     2      0      15
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_clearExpireFlag                                 3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _WDT_Initialize
   _TMR0_clearExpireFlag
   _TMR0_expire
   _irRemote_Analizar

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       1       5        1.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10               1      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Fri Apr 10 18:14:59 2020

                        __CFG_CP$OFF 0000            __end_of_irRemote_Analizar 015B  
                                 l93 0217                                   u94 01E3  
                                 u95 01E2                                   _t0 0071  
                                 _t1 0073                                   _t2 0074  
                    _timer0ReloadVal 0076                                  l152 015A  
                                l181 01A9                                  l740 0064  
                                l734 0048                                  l752 00A4  
                                l762 00DD                                  l780 0138  
                                l772 0115                                  l776 012C  
                                l784 0145                                  u104 01F1  
                                u105 01F0                         __CFG_CPD$OFF 0000  
                                _t00 0072                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                       __CFG_LVP$OFF 0000                                 _LATA 010C  
                               _LATC 010E                                 i1l69 000D  
                               _PLLR 04D6                                 _TMR0 0015  
                               _WPUA 020C                                 _WPUC 020E  
                               u3_20 0172                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 019D  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 0011  
                               ttemp 007E                                 wtemp 007E  
                      __CFG_MCLRE$ON 0000              __end_of_TMR0_Initialize 01DD  
                      __CFG_PLLEN$ON 0000       __size_of_OSCILLATOR_Initialize 000A  
      __end_of_OSCILLATOR_Initialize 021B                                ?_main 0078  
                      __CFG_WDTE$OFF 0000                                i1l716 019A  
                              i1l690 0174                                _TRISA 008C  
                              _TRISC 008E                     __end_of_TMR0_ISR 019D  
                              _t_4ms 0075                       _WDT_Initialize 021B  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
      __size_of_TMR0_clearExpireFlag 000E                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                   TMR0_expire@flagi 007B                      __initialization 0013  
                       __end_of_main 01B8           __size_of_irRemote_Analizar 0132  
        ?_INTERRUPT_InterruptManager 0078                               ??_main 007E  
             __end_of_WDT_Initialize 021F                               _ANSELA 018C  
                             _ANSELC 018E                               _BORCON 0116  
                             _OSCCON 0099                               _WDTCON 0097  
                     __CFG_PWRTE$OFF 0000                       __CFG_STVREN$ON 0000  
                             _irdata 0070                     ?_TMR0_Initialize 0078  
                       ?_TMR0_expire 0078                      ?_WDT_Initialize 0078  
                  _SYSTEM_Initialize 0205              __end_of__initialization 0026  
                 ?_SYSTEM_Initialize 0078                       __pcstackCOMMON 0078  
                ??_SYSTEM_Initialize 007B                            ?_TMR0_ISR 0078  
                     _OPTION_REGbits 0095            __end_of_SYSTEM_Initialize 0211  
                         __pbssBANK0 0020                           __pmaintext 019D  
                         ??_TMR0_ISR 0078                           __pintentry 0004  
                            _APFCON0 011D                              _APFCON1 011E  
                            _OSCTUNE 0098            TMR0_clearExpireFlag@flagi 007C  
       __end_of_TMR0_clearExpireFlag 01F9                              __ptext0 0000  
                            __ptext1 0029                              __ptext2 01DD  
                            __ptext3 01EB                              __ptext4 0205  
                            __ptext5 021B                              __ptext6 01CE  
                            __ptext7 01B8                              __ptext8 0211  
              _OSCILLATOR_Initialize 0211                 __size_of_TMR0_expire 000E  
           ??_PIN_MANAGER_Initialize 007A                              _timers1 0077  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 01FA  
               end_of_initialization 0026                     ??_WDT_Initialize 007A  
                          _PORTCbits 000E                     __CFG_FOSC$INTOSC 0000  
                  __size_of_TMR0_ISR 0042               ?_OSCILLATOR_Initialize 0078  
                start_initialization 0013             __size_of_TMR0_Initialize 000F  
    __size_of_PIN_MANAGER_Initialize 0016                 _TMR0_clearExpireFlag 01EB  
                        __pbssBIGRAM 2321                          __pbssCOMMON 0070  
                          ___latbits 0002                ?_TMR0_clearExpireFlag 0078  
             _PIN_MANAGER_Initialize 01B8         ??_INTERRUPT_InterruptManager 0079  
                  ??_TMR0_Initialize 007A                             _LATAbits 010C  
                           _LATCbits 010E                            _varAjuste 0020  
                          clear_ram0 01F9  __size_of_INTERRUPT_InterruptManager 000D  
                           _TMR0_ISR 015B                        ??_TMR0_expire 007A  
             ??_TMR0_clearExpireFlag 007A              ??_OSCILLATOR_Initialize 007A  
                __end_of_TMR0_expire 01EB                             __ptext10 015B  
                      __size_of_main 001B                             _irparams 2321  
 __end_of_INTERRUPT_InterruptManager 0011           _INTERRUPT_InterruptManager 0004  
                         _INTCONbits 000B              __size_of_WDT_Initialize 0004  
                           intlevel1 0000              ?_PIN_MANAGER_Initialize 0078  
                  __CFG_CLKOUTEN$OFF 0000                    _irRemote_Analizar 0029  
                        _TMR0_expire 01DD                           _OPTION_REG 0095  
                 ?_irRemote_Analizar 0078                      _TMR0_Initialize 01CE  
                ??_irRemote_Analizar 007A       __end_of_PIN_MANAGER_Initialize 01CE  
